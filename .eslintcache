[{"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/index.js":"1","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/serviceWorker.js":"2","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/App.js":"3","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/configureStore.js":"4","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/routes.js":"5","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/GlobalStyles.js":"6","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/index.js":"7","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/index.js":"8","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/RegisterView.js":"9","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/LoginView.js":"10","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/typography.js":"11","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/shadows.js":"12","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/notificationReducer.js":"13","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/authReducer.js":"14","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/index.js":"15","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/MainLayout/index.js":"16","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/index.js":"17","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/index.js":"18","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Page.js":"19","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/actionsType.js":"20","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/Password.js":"21","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/Notifications.js":"22","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/data.js":"23","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/index.js":"24","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/Toolbar.js":"25","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/ProductCard.js":"26","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/MainLayout/TopBar.js":"27","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/TopBar.js":"28","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/notificationAction.js":"29","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/NavBar/index.js":"30","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Logo.js":"31","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/NavBar/NavItem.js":"32","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/authAction.js":"33","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/signupAction.js":"34","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/AccountCoach/index.js":"35","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/index.js":"36","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Calendar/Calendar.js":"37","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/TaskPreview/index.js":"38","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/TaskTool/index.js":"39","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/DailyTask/index.js":"40","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/SearchClient/index.js":"41","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/index.js":"42","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-dailyTask.js":"43","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-flame-coach.js":"44","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/ModalWarning/index.js":"45","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/AccountClient/index.js":"46","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-client.js":"47","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/index.js":"48","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/LogoutView.js":"49","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-coach.js":"50","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Warning/index.js":"51","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-enrollment-process.js":"52","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/customer/index.js":"53","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/logging/index.js":"54","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/Profile.js":"55","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/ProfileDetails.js":"56","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardCoach/index.js":"57","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/index.js":"58","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardCoach/TasksProgress.js":"59","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/TasksProgress.js":"60","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/Tasks/index.js":"61","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/MyCoach/index.js":"62","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/NextSession/index.js":"63","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/Tasks/TaskPanel.js":"64","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/notificationTypes.js":"65","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/ErrorMessage/ErrorMessage.js":"66","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/InfoMessage/InfoMessage.js":"67","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/UnderConstruction/index.js":"68","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/notFound/NotFoundView.js":"69","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/NotFound/index.js":"70","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/SmallBox/index.js":"71","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/404.js":"72","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/ConnectionError.js":"73","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/UnderConstruction.js":"74"},{"size":1415,"mtime":1618396692747,"results":"75","hashOfConfig":"76"},{"size":4953,"mtime":1610907211000,"results":"77","hashOfConfig":"76"},{"size":1016,"mtime":1617950929278,"results":"78","hashOfConfig":"76"},{"size":1248,"mtime":1611239810195,"results":"79","hashOfConfig":"76"},{"size":2304,"mtime":1618397256836,"results":"80","hashOfConfig":"76"},{"size":672,"mtime":1610907211000,"results":"81","hashOfConfig":"76"},{"size":861,"mtime":1616224170572,"results":"82","hashOfConfig":"76"},{"size":875,"mtime":1611232467919,"results":"83","hashOfConfig":"76"},{"size":9148,"mtime":1618330478323,"results":"84","hashOfConfig":"76"},{"size":5576,"mtime":1618244977354,"results":"85","hashOfConfig":"76"},{"size":544,"mtime":1610907211000,"results":"86","hashOfConfig":"76"},{"size":1618,"mtime":1610907211000,"results":"87","hashOfConfig":"76"},{"size":429,"mtime":1611232206925,"results":"88","hashOfConfig":"76"},{"size":1420,"mtime":1615115466818,"results":"89","hashOfConfig":"76"},{"size":1343,"mtime":1610907211000,"results":"90","hashOfConfig":"76"},{"size":1001,"mtime":1610907211000,"results":"91","hashOfConfig":"76"},{"size":1583,"mtime":1610907211000,"results":"92","hashOfConfig":"93"},{"size":683,"mtime":1613141069813,"results":"94","hashOfConfig":"76"},{"size":462,"mtime":1610907211000,"results":"95","hashOfConfig":"76"},{"size":411,"mtime":1615115439897,"results":"96","hashOfConfig":"76"},{"size":1765,"mtime":1610907211000,"results":"97","hashOfConfig":"76"},{"size":3107,"mtime":1610907211000,"results":"98","hashOfConfig":"93"},{"size":1663,"mtime":1610907211000,"results":"99","hashOfConfig":"93"},{"size":188,"mtime":1618154812141,"results":"100","hashOfConfig":"76"},{"size":1814,"mtime":1610907211000,"results":"101","hashOfConfig":"93"},{"size":2569,"mtime":1610907211000,"results":"102","hashOfConfig":"93"},{"size":744,"mtime":1618394786206,"results":"103","hashOfConfig":"76"},{"size":2204,"mtime":1618394931504,"results":"104","hashOfConfig":"76"},{"size":237,"mtime":1611232219067,"results":"105","hashOfConfig":"76"},{"size":5441,"mtime":1618412349167,"results":"106","hashOfConfig":"76"},{"size":174,"mtime":1618331910588,"results":"107","hashOfConfig":"76"},{"size":1637,"mtime":1610907211000,"results":"108","hashOfConfig":"76"},{"size":1557,"mtime":1618236107871,"results":"109","hashOfConfig":"76"},{"size":1613,"mtime":1618236089002,"results":"110","hashOfConfig":"76"},{"size":6542,"mtime":1618244959550,"results":"111","hashOfConfig":"76"},{"size":12452,"mtime":1618396728771,"results":"112","hashOfConfig":"76"},{"size":1945,"mtime":1618311922669,"results":"113","hashOfConfig":"76"},{"size":1752,"mtime":1617466435530,"results":"114","hashOfConfig":"76"},{"size":10802,"mtime":1618244973627,"results":"115","hashOfConfig":"76"},{"size":5078,"mtime":1618324337443,"results":"116","hashOfConfig":"76"},{"size":772,"mtime":1616230626680,"results":"117","hashOfConfig":"76"},{"size":627,"mtime":1617781645443,"results":"118","hashOfConfig":"76"},{"size":2678,"mtime":1617462962127,"results":"119","hashOfConfig":"76"},{"size":129,"mtime":1613546398235,"results":"120","hashOfConfig":"76"},{"size":1986,"mtime":1613835552573,"results":"121","hashOfConfig":"122"},{"size":9806,"mtime":1618244959087,"results":"123","hashOfConfig":"76"},{"size":1785,"mtime":1617116879026,"results":"124","hashOfConfig":"76"},{"size":2098,"mtime":1618244861515,"results":"125","hashOfConfig":"76"},{"size":844,"mtime":1614860556393,"results":"126","hashOfConfig":"76"},{"size":1481,"mtime":1617208990358,"results":"127","hashOfConfig":"76"},{"size":1731,"mtime":1618415935473,"results":"128","hashOfConfig":"76"},{"size":1387,"mtime":1617818670589,"results":"129","hashOfConfig":"76"},{"size":9348,"mtime":1618330630653,"results":"130","hashOfConfig":"76"},{"size":599,"mtime":1616776268714,"results":"131","hashOfConfig":"76"},{"size":2363,"mtime":1617287459159,"results":"132","hashOfConfig":"76"},{"size":13336,"mtime":1617209711136,"results":"133","hashOfConfig":"76"},{"size":1041,"mtime":1618406013315,"results":"134","hashOfConfig":"76"},{"size":14685,"mtime":1618410370040,"results":"135","hashOfConfig":"76"},{"size":1635,"mtime":1611427658339,"results":"136","hashOfConfig":"122"},{"size":1634,"mtime":1617518142339,"results":"137","hashOfConfig":"76"},{"size":5273,"mtime":1617626428089,"results":"138","hashOfConfig":"76"},{"size":1342,"mtime":1617627048840,"results":"139","hashOfConfig":"76"},{"size":1355,"mtime":1617626598979,"results":"140","hashOfConfig":"122"},{"size":771,"mtime":1617623123838,"results":"141","hashOfConfig":"76"},{"size":126,"mtime":1618235735911,"results":"142","hashOfConfig":"76"},{"size":3085,"mtime":1618242294328,"results":"143","hashOfConfig":"76"},{"size":1354,"mtime":1618244786368,"results":"144","hashOfConfig":"76"},{"size":2481,"mtime":1618415934235,"results":"145","hashOfConfig":"76"},{"size":784,"mtime":1618412740355,"results":"146","hashOfConfig":"76"},{"size":1565,"mtime":1618415932241,"results":"147","hashOfConfig":"76"},{"size":1670,"mtime":1618412349798,"results":"148","hashOfConfig":"76"},{"size":2106,"mtime":1618412695328,"results":"149","hashOfConfig":"76"},{"size":5681,"mtime":1618412832034,"results":"150","hashOfConfig":"76"},{"size":5985,"mtime":1618405686266,"results":"151","hashOfConfig":"76"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},"x54yrm",{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},"mtkdu1",{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"187"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"154"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"217"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"222","messages":"223","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"224","messages":"225","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"154"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"154"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"240","messages":"241","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"242","messages":"243","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"sf7wj7",{"filePath":"248","messages":"249","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"250","usedDeprecatedRules":"154"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"253","messages":"254","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"255","messages":"256","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"257","usedDeprecatedRules":"154"},{"filePath":"258","messages":"259","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"260","messages":"261","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"262","messages":"263","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"264","messages":"265","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"154"},{"filePath":"267","messages":"268","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"269","messages":"270","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"271","messages":"272","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"273","messages":"274","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"275","messages":"276","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"277","messages":"278","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"280","messages":"281","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"282","messages":"283","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"284","messages":"285","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"286","messages":"287","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"279"},{"filePath":"288","messages":"289","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"290","messages":"291","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"292","messages":"293","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"294","messages":"295","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"296","messages":"297","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"298","messages":"299","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"300","messages":"301","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"154"},{"filePath":"304","messages":"305","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"306","messages":"307","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/index.js",[],["310","311","312","313","314","315","316"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/serviceWorker.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/App.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/configureStore.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/routes.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/GlobalStyles.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/RegisterView.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/LoginView.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/typography.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/theme/shadows.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/notificationReducer.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/reducers/authReducer.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/MainLayout/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/index.js",[],["317","318","319","320","321","322"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Page.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/actionsType.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/Password.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/settings/SettingsView/Notifications.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/data.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/Toolbar.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/product/ProductListView/ProductCard.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/MainLayout/TopBar.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/TopBar.js",["323"],"import React from 'react';\nimport clsx from 'clsx';\nimport logger from 'loglevel';\nimport PropTypes from 'prop-types';\nimport {\n  AppBar, Box, Hidden, IconButton, makeStyles, Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport InputIcon from '@material-ui/icons/Input';\nimport { connect } from 'react-redux';\nimport { loggedOut, notification } from '../../store/actions';\n\nconst useStyles = makeStyles(() => ({\n  root: {},\n  avatar: {\n    width: 60,\n    height: 60\n  }\n}));\n\nconst TopBar = ({\n  className,\n  onMobileNavOpen,\n  // FIXME\n  // eslint-disable-next-line no-shadow\n  notification,\n  signOut,\n  ...rest\n}) => {\n  const classes = useStyles();\n\n  return (\n    <AppBar\n      className={clsx(classes.root, className)}\n      elevation={0}\n      {...rest}\n    >\n      <Toolbar>\n        {\n        /**\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        */\n        }\n        <Box flexGrow={1} />\n        <Hidden mdDown>\n          {/* <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notificationLength.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon onClick={() => notification()} />\n            </Badge>\n          </IconButton> */}\n          <IconButton color=\"inherit\">\n            <InputIcon onClick={() => signOut()} />\n          </IconButton>\n        </Hidden>\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n            onClick={() => {\n              logger.info('Open the mobile menu');\n              onMobileNavOpen();\n            }}\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\n// FIXME: Remove this and fix this method\n// eslint-disable-next-line react-redux/mapDispatchToProps-prefer-shorthand\nconst mapDispatchToProps = (dispatch) => ({\n  signOut: () => dispatch(loggedOut()),\n  notification: () => dispatch(notification())\n});\n\nTopBar.propTypes = {\n  className: PropTypes.string,\n  onMobileNavOpen: PropTypes.func,\n  signOut: PropTypes.func,\n  notification: PropTypes.func\n};\n\nexport default connect(null, mapDispatchToProps)(TopBar);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/notificationAction.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/NavBar/index.js",["324"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Logo.js",[],["325","326","327","328","329","330","331"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/layouts/DashboardLayout/NavBar/NavItem.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/authAction.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/store/actions/signupAction.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/AccountCoach/index.js",["332"],"import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport ErrorMessage from 'src/components/Notification/ErrorMessage/ErrorMessage';\nimport InfoMessage from 'src/components/Notification/InfoMessage/InfoMessage';\nimport Page from 'src/components/Page';\nimport logger from 'loglevel';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport update from 'immutability-helper';\nimport Profile from '../Profile';\nimport ProfileDetails from '../ProfileDetails';\nimport { logDebug, logError } from '../../../logging';\nimport {\n  getCoachContactInformation,\n  updateCoachContactInformation\n} from '../../../axios';\nimport Warning from '../../../components/Warning';\nimport Notification from '../../../components/Notification';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = ({\n  customerIdentifier,\n  email\n}) => {\n  const queryClient = useQueryClient();\n\n  const classes = useStyles();\n\n  const [notification, setNotification] = useState({\n    enable: false,\n    message: '',\n    level: 'INFO'\n  });\n\n  const resetNotificationHandler = () => {\n    setNotification(update(notification,\n      {\n        enable: { $set: false }\n      }));\n  };\n\n  const updateNotificationHandler = (enable, message, level) => {\n    setNotification({\n      enable,\n      message,\n      level\n    });\n  };\n\n  const updateUserDetailsHandler = (event) => {\n    let newValue = event.target.value;\n\n    queryClient.setQueryData(['getContactInformation', customerIdentifier], (oldData) => {\n      if (event.target.name === 'country') {\n        logDebug('AccountCoach', 'updateUserDetailsHandler', 'Event Native:', event.nativeEvent.target);\n        newValue = {\n          value: event.nativeEvent.target.textContent,\n          code: event.target.value.length === 0 ? null : event.target.value\n        };\n      }\n\n      return {\n        ...oldData,\n        [event.target.name]: newValue\n      };\n    });\n  };\n\n  const updatePhotoHandler = () => {\n    logger.debug('Update photo');\n  };\n\n  const contactInformation = useQuery(['getContactInformation', customerIdentifier],\n    () => getCoachContactInformation(customerIdentifier), {\n      onError: async (err) => {\n        logError('AccountCoach',\n          'useQuery getCoachContactInformation',\n          'Error:', err);\n      }\n    });\n\n  const updateContactInformation = useMutation(\n    ({\n      // eslint-disable-next-line no-shadow\n      customerIdentifier,\n      newContactInformation\n    }) => updateCoachContactInformation(customerIdentifier, newContactInformation),\n    {\n      onError: (error) => {\n        logError('AccountCoach', 'updateContactInformation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: () => {\n        const infoCode = InfoMessage.CODE_2001;\n        updateNotificationHandler(true, infoCode.msg, infoCode.level);\n      }\n    }\n  );\n\n  const saveContactInformationHandler = () => {\n    logDebug('AccountCoach', 'saveContactInformationHandler', 'Contact Information:', contactInformation.data);\n\n    const newContactInformation = {\n      firstName: contactInformation.data.firstName,\n      lastName: contactInformation.data.lastName,\n      phoneCode: contactInformation.data.phoneCode,\n      phoneNumber: contactInformation.data.phoneNumber,\n      countryCode: (contactInformation.data.country) ? contactInformation.data.country.code : null\n    };\n\n    updateContactInformation.mutate({\n      customerIdentifier,\n      newContactInformation\n    });\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        {!contactInformation.isLoading && !contactInformation.isError\n          ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <Profile\n                  user={{\n                    city: '',\n                    country: (contactInformation.data.country)\n                      ? contactInformation.data.country.value : '',\n                    avatar: ''\n                  }}\n                  updatePhotoHandler={updatePhotoHandler}\n                />\n              </Grid>\n              <Grid\n                item\n                lg={8}\n                md={6}\n                xs={12}\n              >\n                <ProfileDetails\n                  userDetails={{\n                    firstName: contactInformation.data.firstName,\n                    lastName: contactInformation.data.lastName,\n                    email,\n                    phoneCode: contactInformation.data.phoneCode,\n                    phoneNumber: contactInformation.data.phoneNumber,\n                    country: contactInformation.data.country && contactInformation.data.country.code\n                      ? contactInformation.data.country.code : '',\n                  }}\n                  saveContactInformationHandler={saveContactInformationHandler}\n                  updateUserDetailsHandler={updateUserDetailsHandler}\n                />\n                {notification.enable\n                  ? (\n                    <Notification\n                      collapse\n                      open={notification.enable}\n                      openHandler={resetNotificationHandler}\n                      level={notification.level}\n                      message={notification.message}\n                    />\n                  )\n                  : null}\n              </Grid>\n            </Grid>\n          ) : null}\n        {!contactInformation.isLoading && contactInformation.isError\n          ? <Warning message={process.env.REACT_APP_MSG_SERVER_ERROR} />\n          : null}\n      </Container>\n    </Page>\n  );\n};\n\nAccount.propTypes = {\n  customerIdentifier: PropTypes.string,\n  email: PropTypes.string\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    customerIdentifier: state.auth.userInfo.identifier !== null\n      ? state.auth.userInfo.identifier : null,\n    email: state.auth.userInfo.username\n  };\n};\n\nexport default connect(mapStateToProps, null)(Account);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/index.js",["333"],"import React, { useEffect, useState } from 'react';\nimport {\n  Box,\n  Card, CardContent, Container, Grid, makeStyles\n} from '@material-ui/core';\nimport update from 'immutability-helper';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport ErrorMessage from 'src/components/Notification/ErrorMessage/ErrorMessage';\nimport InfoMessage from 'src/components/Notification/InfoMessage/InfoMessage';\nimport Page from '../../components/Page';\nimport Calendar from '../../components/Calendar/Calendar';\nimport TaskPreview from './TaskPreview';\nimport TaskTool from './TaskTool';\nimport SearchClient from '../../components/SearchClient';\nimport {\n  addDailyTask,\n  addMultipleDailyTasks,\n  deleteDailyTasksByUUID,\n  getClientsCoach,\n  getDailyTasksByClientAndDay,\n  updateDailyTaskByUUID\n} from '../../axios';\nimport Warning from '../../components/Warning';\nimport { logDebug, logError } from '../../logging';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  },\n  searchClientCard: {\n    marginBottom: theme.spacing(3)\n  },\n  actionTaskCard: {\n    marginTop: theme.spacing(3)\n  }\n}));\n\nconst Planner = ({ customerIdentifier }) => {\n  const classes = useStyles();\n\n  const queryClient = useQueryClient();\n\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [selectedClient, setSelectedClient] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(new Date());\n\n  const [notification, setNotification] = useState({\n    enable: false,\n    message: '',\n    level: 'INFO'\n  });\n\n  const updateNotificationHandler = (enable, message, level) => {\n    setNotification({\n      enable,\n      message,\n      level\n    });\n  };\n\n  const clients = useQuery(['getClientsCoach', customerIdentifier],\n    () => getClientsCoach(customerIdentifier), {\n      onError: async (err) => {\n        logError('Planner',\n          'useQuery getClientsCoach',\n          'Error:', err);\n      },\n      refetchOnMount: 'always'\n    });\n\n  const clientTasks = useQuery(['getDailyTasksByClientAndDay', selectedClient, selectedDate],\n    () => getDailyTasksByClientAndDay(selectedClient.identifier, selectedDate, selectedDate), {\n      onError: async (err) => {\n        logError('Planner',\n          'useQuery getDailyTasksByClientAndDay',\n          'Error:', err);\n      },\n      enabled: false\n    });\n\n  useEffect(() => {\n    if (selectedClient !== null && selectedDate !== null) {\n      clientTasks.refetch();\n    }\n  }, [selectedClient, selectedDate]);\n\n  const searchClientSelectHandler = (client) => {\n    logDebug('Planner',\n      'searchClientSelectHandler',\n      'Client Selected:', client);\n    setSelectedClient(client);\n  };\n\n  const selectDateHandler = (value) => {\n    logDebug('Planner',\n      'selectDateHandler',\n      'Period Selected:', value[0], value[1]);\n    setSelectedDate(value[0]);\n  };\n\n  const selectUpdateTaskHandler = (task) => {\n    logDebug('Planner',\n      'selectUpdateTaskHandler',\n      'Task Selected', task);\n    setSelectedTask(task);\n  };\n\n  const notificationHandler = () => {\n    setNotification(update(notification,\n      {\n        enable: { $set: false }\n      }));\n  };\n\n  const addMultiplesDailyTasksMutation = useMutation(\n    ({\n      task,\n      clientIdentifier,\n      // eslint-disable-next-line no-shadow\n      coachIdentifier\n    }) => addMultipleDailyTasks(task, clientIdentifier, coachIdentifier),\n    {\n      onError: async (error) => {\n        logError('Planner', 'addMultiplesDailyTasksMutation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      }\n    }\n  );\n\n  const addDailyTaskMutation = useMutation(\n    ({\n      task,\n      clientIdentifier,\n      // eslint-disable-next-line no-shadow\n      coachIdentifier\n    }) => addDailyTask(task, clientIdentifier, coachIdentifier),\n    {\n      onError: async (error) => {\n        logError('Planner', 'addDailyTaskMutation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: async (data) => {\n        await queryClient.cancelQueries(['getDailyTasksByClientAndDay', selectedClient, selectedDate]);\n\n        logDebug('Planner',\n          'addDailyTaskMutation',\n          'Response:', data);\n\n        queryClient.setQueryData(['getDailyTasksByClientAndDay', selectedClient, selectedDate], (oldData) => {\n          logDebug('Planner',\n            'addDailyTaskMutation',\n            'Old Data:', oldData);\n          return update(oldData, { dailyTasks: { $push: [data.dailyTasks[0]] } });\n        });\n\n        const errorCode = InfoMessage.CODE_4001;\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      }\n    }\n  );\n\n  const updateDailyTaskMutation = useMutation(\n    ({\n      taskIdentifier,\n      newTask\n    }) => updateDailyTaskByUUID(taskIdentifier, newTask),\n    {\n      onError: async (error) => {\n        logError('Planner', 'updateDailyTaskMutation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: async (data, variables) => {\n        await queryClient.cancelQueries(['getDailyTasksByClientAndDay', selectedClient, selectedDate]);\n\n        logDebug('Planner',\n          'updateDailyTaskMutation',\n          'Response:', data);\n\n        queryClient.setQueryData(['getDailyTasksByClientAndDay', selectedClient, selectedDate], (oldData) => {\n          logDebug('Planner',\n            'updateDailyTaskMutation',\n            'Old Data:', oldData);\n          const index = oldData.dailyTasks.findIndex(\n            (dailyTask) => dailyTask !== undefined\n              && dailyTask.identifier === variables.taskIdentifier\n          );\n\n          // FIXME: The undefined values should be deleted\n          const newData = update(oldData, {\n            dailyTasks: {\n              [index]: { $set: data.dailyTasks[0] }\n            }\n          });\n\n          logDebug('Planner',\n            'updateDailyTaskMutation',\n            'New Data:', newData);\n\n          return newData;\n        });\n\n        const errorCode = InfoMessage.CODE_4002;\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n        setSelectedTask(null);\n      }\n    }\n  );\n\n  const deleteDailyTaskMutation = useMutation(\n    ({ taskIdentifier }) => deleteDailyTasksByUUID(taskIdentifier),\n    {\n      onError: async (error) => {\n        logError('Planner', 'deleteDailyTaskMutation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: async (data, variables) => {\n        await queryClient.cancelQueries(['getDailyTasksByClientAndDay', selectedClient, selectedDate]);\n\n        logDebug('Planner',\n          'deleteDailyTaskMutation',\n          'Response:', data);\n\n        queryClient.setQueryData(['getDailyTasksByClientAndDay', selectedClient, selectedDate], (oldData) => {\n          logDebug('Planner',\n            'deleteDailyTaskMutation',\n            'Old Data:', oldData);\n          const index = oldData.dailyTasks.findIndex(\n            (dailyTask) => dailyTask !== undefined\n              && dailyTask.identifier === variables.taskIdentifier\n          );\n\n          // FIXME: The undefined values should be deleted\n          const newData = update(oldData, { dailyTasks: { $unset: [index] } });\n\n          logDebug('Planner',\n            'deleteDailyTaskMutation',\n            'New Data:', newData);\n\n          return newData;\n        });\n\n        const errorCode = InfoMessage.CODE_4003;\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      }\n    }\n  );\n\n  const addMultipleTasksHandler = (task) => {\n    if (selectedClient === null) {\n      const errorCode = ErrorMessage.CODE_0002;\n      updateNotificationHandler(true, errorCode.msg, errorCode.level);\n    }\n\n    if (selectedClient !== null && selectedDate !== null) {\n      logDebug('Planner',\n        'addMultipleTasksHandler',\n        'Add multiple tasks action. Task: ', task);\n      addMultiplesDailyTasksMutation.mutate(\n        {\n          task,\n          clientIdentifier: selectedClient.identifier,\n          coachIdentifier: customerIdentifier\n        }\n      );\n    }\n  };\n\n  const addTasksHandler = (task) => {\n    if (selectedClient === null) {\n      const errorCode = ErrorMessage.CODE_0002;\n      updateNotificationHandler(true, errorCode.msg, errorCode.level);\n    }\n\n    if (selectedClient !== null && selectedDate !== null) {\n      addDailyTaskMutation.mutate(\n        {\n          task,\n          clientIdentifier: selectedClient.identifier,\n          coachIdentifier: customerIdentifier\n        }\n      );\n    }\n  };\n\n  const updateTasksHandler = (newTask) => {\n    if (selectedTask === null) {\n      const errorCode = ErrorMessage.CODE_0003;\n      updateNotificationHandler(true, errorCode.msg, errorCode.level);\n    }\n\n    if (selectedTask !== null && selectedClient !== null && selectedDate !== null) {\n      newTask = update(newTask, { ticked: { $set: selectedTask.ticked } });\n\n      updateDailyTaskMutation.mutate({\n        taskIdentifier: selectedTask.identifier,\n        newTask\n      });\n    }\n  };\n\n  const deleteTaskHandler = (task) => {\n    if (task !== null) {\n      deleteDailyTaskMutation.mutate({ taskIdentifier: task.identifier });\n    }\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Planner\"\n    >\n      <Container maxWidth={false}>\n        {(!clients.isLoading && !clientTasks.isLoading)\n        && (clients.isError || clientTasks.isError)\n          ? <Warning message={process.env.REACT_APP_MSG_SERVER_ERROR} />\n          : null}\n        {(!clients.isLoading && !clientTasks.isLoading)\n        && (!clients.isError || !clientTasks.isError)\n        && clients.data ? (\n          <>\n            <Box className={classes.searchClientCard}>\n              <Card>\n                <CardContent>\n                  <SearchClient\n                    clients={clients.data.clientsCoach}\n                    searchSelectedHandler={searchClientSelectHandler}\n                  />\n                </CardContent>\n              </Card>\n            </Box>\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={8}\n                md={12}\n                xl={9}\n                xs={12}\n              >\n                <TaskPreview\n                  tasks={clientTasks.data ? clientTasks.data.dailyTasks : []}\n                  date={selectedDate}\n                  selectUpdateTaskHandler={selectUpdateTaskHandler}\n                  deleteTaskHandler={deleteTaskHandler}\n                />\n              </Grid>\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xl={3}\n                xs={12}\n              >\n                <Calendar daily onChangeCalendar={selectDateHandler} />\n              </Grid>\n            </Grid>\n            <Box className={classes.actionTaskCard}>\n              <TaskTool\n                task={selectedTask}\n                notification={notification}\n                notificationCollapseHandler={notificationHandler}\n                updateNotificationHandler={updateNotificationHandler}\n                addTasksHandler={addTasksHandler}\n                addMultipleTasksHandler={addMultipleTasksHandler}\n                updateTaskHandler={updateTasksHandler}\n                selectUpdateTaskHandler={selectUpdateTaskHandler}\n              />\n            </Box>\n          </>\n          ) : null}\n      </Container>\n    </Page>\n  );\n};\n\nPlanner.propTypes = {\n  customerIdentifier: PropTypes.string\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    customerIdentifier: state.auth.userInfo.identifier !== null\n      ? state.auth.userInfo.identifier : null\n  };\n};\n\nexport default connect(mapStateToProps, null)(Planner);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Calendar/Calendar.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/TaskPreview/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/planner/TaskTool/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/DailyTask/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/SearchClient/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-dailyTask.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-flame-coach.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/ModalWarning/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/AccountClient/index.js",["334"],"import React, { useState } from 'react';\nimport {\n  Container,\n  Grid,\n  makeStyles\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport logger from 'loglevel';\nimport ErrorMessage from 'src/components/Notification/ErrorMessage/ErrorMessage';\nimport InfoMessage from 'src/components/Notification/InfoMessage/InfoMessage';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport update from 'immutability-helper';\nimport Profile from '../Profile';\nimport ProfileDetails from '../ProfileDetails';\nimport {\n  getClientContactInformation,\n  getClientPersonalData, updateClientContactInformation, updateClientPersonalData\n} from '../../../axios';\nimport { logDebug, logError } from '../../../logging';\nimport Warning from '../../../components/Warning';\nimport Notification from '../../../components/Notification';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%',\n    paddingBottom: theme.spacing(3),\n    paddingTop: theme.spacing(3)\n  }\n}));\n\nconst Account = ({\n  customerIdentifier,\n  email\n}) => {\n  const queryClient = useQueryClient();\n  const classes = useStyles();\n\n  const [notification, setNotification] = useState({\n    enable: false,\n    message: '',\n    level: 'INFO'\n  });\n\n  const resetNotificationHandler = () => {\n    setNotification(update(notification,\n      {\n        enable: { $set: false }\n      }));\n  };\n\n  const updateNotificationHandler = (enable, message, level) => {\n    setNotification({\n      enable,\n      message,\n      level\n    });\n  };\n\n  const contactInformationFields = ['firstName', 'lastName', 'phoneCode', 'phoneNumber', 'country'];\n  const personalDataFields = ['measureType', 'weight', 'height', 'gender'];\n\n  const contactInformation = useQuery(['getContactInformation', customerIdentifier],\n    () => getClientContactInformation(customerIdentifier), {\n      onError: async (err) => {\n        logError('AccountClient',\n          'useQuery getClientContactInformation',\n          'Error:', err);\n      }\n    });\n\n  const updateContactInformation = useMutation(\n    ({\n      // eslint-disable-next-line no-shadow\n      customerIdentifier,\n      newContactInformation\n    }) => updateClientContactInformation(customerIdentifier, newContactInformation),\n    {\n      onError: (error) => {\n        logError('AccountClient', 'updateContactInformation', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: () => {\n        const infoCode = InfoMessage.CODE_2001;\n        updateNotificationHandler(true, infoCode.msg, infoCode.level);\n      }\n    }\n  );\n\n  const personalData = useQuery(['getClientPersonalData', customerIdentifier],\n    () => getClientPersonalData(customerIdentifier), {\n      onError: async (err) => {\n        logError('AccountClient',\n          'useQuery getClientPersonalData',\n          'Error:', err);\n      }\n    });\n\n  const updatePersonalData = useMutation(\n    ({\n      // eslint-disable-next-line no-shadow\n      customerIdentifier,\n      newPersonalData\n    }) => updateClientPersonalData(customerIdentifier, newPersonalData),\n    {\n      onError: (error) => {\n        logError('AccountClient', 'updatePersonalData', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: () => {\n        const infoCode = InfoMessage.CODE_2002;\n        updateNotificationHandler(true, infoCode.msg, infoCode.level);\n      }\n    }\n  );\n\n  const updateUserDetailsHandler = (event) => {\n    logDebug('AccountClient', 'updateUserDetailsHandler', 'Event:', event.target);\n\n    let newValue = event.target.value;\n\n    if (contactInformationFields.includes(event.target.name)) {\n      queryClient.setQueryData(['getContactInformation', customerIdentifier], (oldData) => {\n        if (event.target.name === 'country') {\n          logDebug('AccountClient', 'updateUserDetailsHandler', 'Event Native:', event.nativeEvent.target);\n          newValue = {\n            value: event.nativeEvent.target.textContent,\n            code: event.target.value.length === 0 ? null : event.target.value\n          };\n        }\n\n        return {\n          ...oldData,\n          [event.target.name]: newValue\n        };\n      });\n    }\n\n    if (personalDataFields.includes(event.target.name)) {\n      queryClient.setQueryData(['getClientPersonalData', customerIdentifier], (oldData) => {\n        if (event.target.name === 'measureType' || event.target.name === 'gender') {\n          logDebug('AccountClient', 'updateUserDetailsHandler', 'Event Native:', event.nativeEvent.target);\n          newValue = {\n            value: event.nativeEvent.target.textContent,\n            code: event.target.value.length === 0 ? null : event.target.value\n          };\n        }\n\n        if (event.target.name === 'weight' || event.target.name === 'height') {\n          newValue = Number.isNaN(event.target.valueAsNumber) ? 0.0 : event.target.valueAsNumber;\n        }\n\n        return {\n          ...oldData,\n          [event.target.name]: newValue\n        };\n      });\n    }\n  };\n\n  const updatePhotoHandler = () => {\n    logger.debug('Update photo');\n  };\n\n  const saveContactInformationHandler = () => {\n    logDebug('AccountClient', 'saveContactInformationHandler', 'Contact Information:', contactInformation.data);\n\n    const newContactInformation = {\n      firstName: contactInformation.data.firstName,\n      lastName: contactInformation.data.lastName,\n      phoneCode: contactInformation.data.phoneCode,\n      phoneNumber: contactInformation.data.phoneNumber,\n      countryCode: (contactInformation.data.country) ? contactInformation.data.country.code : null\n    };\n\n    updateContactInformation.mutate({\n      customerIdentifier,\n      newContactInformation\n    });\n  };\n\n  const savePersonalInformationHandler = () => {\n    logDebug('AccountClient', 'savePersonalInformationHandler', 'Personal Information:', personalData.data);\n\n    const newPersonalData = {\n      weight: personalData.data.weight,\n      height: personalData.data.height,\n      genderCode: (personalData.data.gender) ? personalData.data.gender.code : null,\n      measureTypeCode: personalData.data.measureType.code\n    };\n\n    updatePersonalData.mutate({\n      customerIdentifier,\n      newPersonalData\n    });\n  };\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Account\"\n    >\n      <Container maxWidth=\"lg\">\n        {!contactInformation.isLoading && !contactInformation.isError\n          && !personalData.isLoading && !personalData.isError ? (\n            <Grid\n              container\n              spacing={3}\n            >\n              <Grid\n                item\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <Profile\n                  user={{\n                    city: '',\n                    country: (contactInformation.data.country)\n                      ? contactInformation.data.country.value : '',\n                    avatar: ''\n                  }}\n                  updatePhotoHandler={updatePhotoHandler}\n                />\n              </Grid>\n              <Grid\n                item\n                lg={8}\n                md={6}\n                xs={12}\n              >\n                <ProfileDetails\n                  enablePersonalData\n                  userDetails={{\n                    firstName: contactInformation.data.firstName,\n                    lastName: contactInformation.data.lastName,\n                    email,\n                    phoneCode: contactInformation.data.phoneCode,\n                    phoneNumber: contactInformation.data.phoneNumber,\n                    country: contactInformation.data.country && contactInformation.data.country.code\n                      ? contactInformation.data.country.code : '',\n                    measureType: personalData.data.measureType.code,\n                    weight: personalData.data.weight,\n                    height: personalData.data.height,\n                    gender: personalData.data.gender && personalData.data.gender.code\n                      ? personalData.data.gender.code : ''\n                  }}\n                  saveContactInformationHandler={saveContactInformationHandler}\n                  savePersonalInformationHandler={savePersonalInformationHandler}\n                  updateUserDetailsHandler={updateUserDetailsHandler}\n                />\n                {notification.enable\n                  ? (\n                    <Notification\n                      collapse\n                      open={notification.enable}\n                      openHandler={resetNotificationHandler}\n                      level={notification.level}\n                      message={notification.message}\n                    />\n                  )\n                  : null}\n              </Grid>\n            </Grid>\n          ) : null}\n        {!contactInformation.isLoading && contactInformation.isError\n          && !personalData.isLoading && personalData.isError\n          ? <Warning message={process.env.REACT_APP_MSG_SERVER_ERROR} />\n          : null}\n      </Container>\n    </Page>\n  );\n};\n\nAccount.propTypes = {\n  customerIdentifier: PropTypes.string,\n  email: PropTypes.string\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    customerIdentifier: state.auth.userInfo.identifier !== null\n      ? state.auth.userInfo.identifier : null,\n    email: state.auth.userInfo.username\n  };\n};\n\nexport default connect(mapStateToProps, null)(Account);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-client.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/auth/LogoutView.js",["335"],"import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { loggedOut } from '../../store/actions';\n\nconst LogoutView = ({ isAuth, signOut }) => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    if (isAuth) {\n      signOut();\n    }\n\n    navigate('/', { replace: true });\n  }, []);\n\n  return (\n    <></>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.loggedIn\n  };\n};\n\n// eslint-disable-next-line react-redux/mapDispatchToProps-prefer-shorthand\nconst mapDispatchToProps = (dispatch) => ({\n  signOut: () => dispatch(loggedOut())\n});\n\nLogoutView.propTypes = {\n  isAuth: PropTypes.bool,\n  signOut: PropTypes.func\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(LogoutView);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-coach.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Warning/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/axios/axios-enrollment-process.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/customer/index.js",["336"],"import React, { useState } from 'react';\nimport {\n  Box, Button,\n  Container, Grid,\n  makeStyles, SvgIcon\n} from '@material-ui/core';\nimport Page from 'src/components/Page';\nimport ErrorMessage from 'src/components/Notification/ErrorMessage/ErrorMessage';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport update from 'immutability-helper';\nimport MUIDataTable from 'mui-datatables';\nimport { UserMinus as UserMinusIcon, UserPlus as UserPlusIcon } from 'react-feather';\nimport { useMutation, useQuery, useQueryClient } from 'react-query';\nimport Warning from '../../components/Warning';\nimport {\n  enrollmentProcessBreak,\n  enrollmentProcessInit,\n  getClientsCoachPlusClientsAvailableForCoaching\n} from '../../axios';\nimport Notification from '../../components/Notification';\nimport { logError } from '../../logging';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    backgroundColor: theme.palette.background.dark,\n    minHeight: '100%'\n  },\n  plusUserButton: {\n    backgroundColor: theme.palette.button.success\n  },\n  minusUserButton: {\n    backgroundColor: theme.palette.button.dangerous\n  },\n}));\n\nconst CustomersView = ({ customerIdentifier }) => {\n  const classes = useStyles();\n  const options = {\n    filterType: 'dropdown',\n    selectableRows: 'none',\n    tableBodyMaxHeight: '70vh',\n    sortOrder: {\n      name: 'Name',\n      direction: 'asc'\n    },\n    print: false\n  };\n  const [notification, setNotification] = useState({\n    enable: false,\n    message: '',\n    level: 'INFO'\n  });\n\n  const queryClient = useQueryClient();\n\n  const [clientLoading, setClientLoading] = useState(false);\n  const [isClientLoading, setIsClientLoading] = useState(null);\n\n  const resetNotificationHandler = () => {\n    setNotification(update(notification,\n      {\n        enable: { $set: false }\n      }));\n  };\n\n  const updateNotificationHandler = (enable, message, level) => {\n    setNotification({\n      enable,\n      message,\n      level\n    });\n  };\n\n  const {\n    isLoading,\n    isError,\n    data\n  } = useQuery(['getClientsCoachPlusClientsAvailableForCoaching', customerIdentifier],\n    () => getClientsCoachPlusClientsAvailableForCoaching(customerIdentifier), {\n      onError: async (err) => {\n        logError('Customer',\n          'useQuery getClientsCoachPlusClientsAvailableForCoaching',\n          'Error:', err);\n      }\n    });\n\n  const linkClient = useMutation(\n    ({\n      clientIdentifier,\n      coachIdentifier\n    }) => enrollmentProcessInit(clientIdentifier, coachIdentifier),\n    {\n      onMutate: async ({ clientIdentifier }) => {\n        setClientLoading(clientIdentifier);\n        setIsClientLoading(true);\n        resetNotificationHandler();\n      },\n      onError: async (error) => {\n        logError('Customer',\n          'useMutation enrollmentProcessInit',\n          'Error:', error.response);\n        setIsClientLoading(false);\n\n        logError('Customer', 'useMutation enrollmentProcessInit', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: async (data, variables) => {\n        await queryClient.cancelQueries(['getClientsCoachPlusClientsAvailableForCoaching', variables.coachIdentifier]);\n\n        queryClient.setQueryData(['getClientsCoachPlusClientsAvailableForCoaching', customerIdentifier], (oldData) => {\n          const index = oldData.clientsCoach.findIndex(\n            (customer) => customer.identifier === variables.clientIdentifier\n          );\n\n          return update(oldData, {\n            clientsCoach: {\n              [index]: {\n                status: { $set: data.status }\n              }\n            }\n          });\n        });\n\n        setIsClientLoading(false);\n      }\n    }\n  );\n\n  const unlinkClient = useMutation(\n    ({\n      clientIdentifier,\n      // eslint-disable-next-line no-unused-vars\n      coachIdentifier\n    }) => enrollmentProcessBreak(clientIdentifier),\n    {\n      onMutate: async ({ clientIdentifier }) => {\n        setClientLoading(clientIdentifier);\n        setIsClientLoading(true);\n        resetNotificationHandler();\n      },\n      onError: async (error) => {\n        logError('Customer',\n          'useMutation enrollmentProcessBreak',\n          'Error:', error.response);\n        setIsClientLoading(false);\n\n        logError('Customer', 'useMutation enrollmentProcessBreak', 'Error Details:', error.response.data.detail);\n        const errorCode = ErrorMessage.fromCode(error.response.data.code);\n        updateNotificationHandler(true, errorCode.msg, errorCode.level);\n      },\n      onSuccess: async (data, variables) => {\n        await queryClient.cancelQueries(['getClientsCoachPlusClientsAvailableForCoaching', variables.coachIdentifier]);\n\n        queryClient.setQueryData(['getClientsCoachPlusClientsAvailableForCoaching', customerIdentifier], (oldData) => {\n          const index = oldData.clientsCoach.findIndex(\n            (customer) => customer.identifier === variables.clientIdentifier\n          );\n\n          return update(oldData, {\n            clientsCoach: {\n              [index]: {\n                status: { $set: data.status }\n              }\n            }\n          });\n        });\n\n        setIsClientLoading(false);\n      }\n    }\n  );\n\n  const linkClientHandler = (client) => {\n    linkClient.mutate({\n      clientIdentifier: client.identifier,\n      coachIdentifier: customerIdentifier\n    });\n  };\n\n  const unlinkClientHandler = (client) => {\n    unlinkClient.mutate({\n      clientIdentifier: client.identifier,\n      coachIdentifier: customerIdentifier\n    });\n  };\n\n  const getStatus = (status) => {\n    switch (status) {\n      case 'AVAILABLE':\n        return 'Available';\n      case 'PENDING':\n        return 'Pending';\n      case 'ACCEPTED':\n        return 'My client';\n      default:\n        return 'Unknown';\n    }\n  };\n\n  const columns = ['Name', 'Email', 'Registration date', 'Status', {\n    label: 'Actions',\n    filter: false,\n    options: {\n      customBodyRender: (value) => {\n        const disableButtonPlus = value.client.identifier === value.clientLoading\n          ? value.isClientLoading || !(value.client.status === 'AVAILABLE')\n          : !(value.client.status === 'AVAILABLE');\n\n        const disableButtonMinus = value.client.identifier === value.clientLoading\n          ? value.isClientLoading || !(value.client.status !== 'AVAILABLE')\n          : !(value.client.status !== 'AVAILABLE');\n\n        return (\n          <Grid\n            container\n            spacing={1}\n          >\n            <Grid item>\n              <Button\n                className={classes.plusUserButton}\n                variant=\"contained\"\n                disabled={disableButtonPlus}\n                onClick={() => linkClientHandler(value.client)}\n              >\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"inherit\"\n                >\n                  <UserPlusIcon />\n                </SvgIcon>\n              </Button>\n            </Grid>\n            <Grid item>\n              <Button\n                className={classes.minusUserButton}\n                variant=\"contained\"\n                disabled={disableButtonMinus}\n                onClick={() => unlinkClientHandler(value.client)}\n              >\n                <SvgIcon\n                  fontSize=\"small\"\n                  color=\"inherit\"\n                >\n                  <UserMinusIcon />\n                </SvgIcon>\n              </Button>\n            </Grid>\n          </Grid>\n        );\n      }\n    }\n  }];\n\n  return (\n    <Page\n      className={classes.root}\n      title=\"Customers\"\n    >\n      <Container maxWidth={false}>\n        <Box mt={3}>\n          {!isLoading && !isError\n            ? (\n              <>\n                <MUIDataTable\n                  title=\"Clients list\"\n                  data={data.clientsCoach.map((client) => ([\n                    `${client.firstname} ${client.lastname}`,\n                    client.email,\n                    client.registrationDate,\n                    getStatus(client.status),\n                    {\n                      client,\n                      clientLoading,\n                      isClientLoading\n                    },\n                  ]))}\n                  columns={columns}\n                  options={options}\n                />\n                {notification.enable\n                  ? (\n                    <Notification\n                      collapse\n                      open={notification.enable}\n                      openHandler={resetNotificationHandler}\n                      level={notification.level}\n                      message={notification.message}\n                    />\n                  )\n                  : null}\n              </>\n            )\n            : null}\n          {!isLoading && isError\n            ? <Warning message={process.env.REACT_APP_MSG_SERVER_ERROR} />\n            : null}\n        </Box>\n      </Container>\n    </Page>\n  );\n};\n\nCustomersView.propTypes = {\n  customerIdentifier: PropTypes.string\n};\n\nconst mapStateToProps = (state) => {\n  return {\n    customerIdentifier: state.auth.userInfo.identifier !== null\n      ? state.auth.userInfo.identifier : null\n  };\n};\n\nexport default connect(mapStateToProps, null)(CustomersView);\n","/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/logging/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/Profile.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/account/ProfileDetails.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardCoach/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/index.js",["337"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardCoach/TasksProgress.js",[],["338","339","340","341","342","343"],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/TasksProgress.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/Tasks/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/MyCoach/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/NextSession/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/dashboard/DashboardClient/Tasks/TaskPanel.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/notificationTypes.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/ErrorMessage/ErrorMessage.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/Notification/InfoMessage/InfoMessage.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/UnderConstruction/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/views/notFound/NotFoundView.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/NotFound/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/components/SmallBox/index.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/404.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/ConnectionError.js",[],"/Users/nbentoneves/Workplace/flame-nutrition/flame-coach-web/src/images/UnderConstruction.js",[],{"ruleId":"344","replacedBy":"345"},{"ruleId":"346","replacedBy":"347"},{"ruleId":"348","replacedBy":"349"},{"ruleId":"350","replacedBy":"351"},{"ruleId":"352","replacedBy":"353"},{"ruleId":"354","replacedBy":"355"},{"ruleId":"356","replacedBy":"357"},{"ruleId":"346","replacedBy":"358"},{"ruleId":"348","replacedBy":"359"},{"ruleId":"350","replacedBy":"360"},{"ruleId":"352","replacedBy":"361"},{"ruleId":"354","replacedBy":"362"},{"ruleId":"356","replacedBy":"363"},{"ruleId":"364","severity":1,"message":"365","line":91,"column":50,"nodeType":"366","endLine":91,"endColumn":56},{"ruleId":"364","severity":1,"message":"365","line":252,"column":47,"nodeType":"366","endLine":252,"endColumn":53},{"ruleId":"344","replacedBy":"367"},{"ruleId":"346","replacedBy":"368"},{"ruleId":"348","replacedBy":"369"},{"ruleId":"350","replacedBy":"370"},{"ruleId":"352","replacedBy":"371"},{"ruleId":"354","replacedBy":"372"},{"ruleId":"356","replacedBy":"373"},{"ruleId":"364","severity":1,"message":"365","line":213,"column":47,"nodeType":"366","endLine":213,"endColumn":54},{"ruleId":"364","severity":1,"message":"365","line":398,"column":47,"nodeType":"366","endLine":398,"endColumn":54},{"ruleId":"364","severity":1,"message":"365","line":292,"column":47,"nodeType":"366","endLine":292,"endColumn":54},{"ruleId":"364","severity":1,"message":"365","line":39,"column":61,"nodeType":"366","endLine":39,"endColumn":71},{"ruleId":"364","severity":1,"message":"365","line":316,"column":47,"nodeType":"366","endLine":316,"endColumn":60},{"ruleId":"364","severity":1,"message":"365","line":510,"column":47,"nodeType":"366","endLine":510,"endColumn":56},{"ruleId":"346","replacedBy":"374"},{"ruleId":"348","replacedBy":"375"},{"ruleId":"350","replacedBy":"376"},{"ruleId":"352","replacedBy":"377"},{"ruleId":"354","replacedBy":"378"},{"ruleId":"356","replacedBy":"379"},"jest/no-try-expect",["380"],"lines-around-directive",["381"],"no-spaced-func",["382"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],["381"],["382"],[],[],[],[],"react-redux/prefer-separate-component-file","Connected component should be defined in a separate file.","Identifier",["380"],["381"],["382"],[],[],[],[],["381"],["382"],[],[],[],[],"no-conditional-expect","padding-line-between-statements","func-call-spacing"]